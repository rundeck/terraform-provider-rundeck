/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiRunAdhocRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRunAdhocRequest{}

// ApiRunAdhocRequest struct for ApiRunAdhocRequest
type ApiRunAdhocRequest struct {
	Project *string `json:"project,omitempty"`
	Exec *string `json:"exec,omitempty"`
	Script *string `json:"script,omitempty"`
	ScriptInterpreter *string `json:"scriptInterpreter,omitempty"`
	ArgString *string `json:"argString,omitempty"`
	InterpreterArgsQuoted *bool `json:"interpreterArgsQuoted,omitempty"`
	Url *string `json:"url,omitempty"`
	Description *string `json:"description,omitempty"`
	Filter *string `json:"filter,omitempty"`
	AsUser *string `json:"asUser,omitempty"`
	FileExtension *string `json:"fileExtension,omitempty"`
	NodeKeepgoing *bool `json:"nodeKeepgoing,omitempty"`
	NodeThreadcount *int32 `json:"nodeThreadcount,omitempty"`
	Meta *map[string]string `json:"meta,omitempty"`
}

// NewApiRunAdhocRequest instantiates a new ApiRunAdhocRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRunAdhocRequest() *ApiRunAdhocRequest {
	this := ApiRunAdhocRequest{}
	return &this
}

// NewApiRunAdhocRequestWithDefaults instantiates a new ApiRunAdhocRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRunAdhocRequestWithDefaults() *ApiRunAdhocRequest {
	this := ApiRunAdhocRequest{}
	return &this
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *ApiRunAdhocRequest) SetProject(v string) {
	o.Project = &v
}

// GetExec returns the Exec field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetExec() string {
	if o == nil || IsNil(o.Exec) {
		var ret string
		return ret
	}
	return *o.Exec
}

// GetExecOk returns a tuple with the Exec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetExecOk() (*string, bool) {
	if o == nil || IsNil(o.Exec) {
		return nil, false
	}
	return o.Exec, true
}

// HasExec returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasExec() bool {
	if o != nil && !IsNil(o.Exec) {
		return true
	}

	return false
}

// SetExec gets a reference to the given string and assigns it to the Exec field.
func (o *ApiRunAdhocRequest) SetExec(v string) {
	o.Exec = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetScript() string {
	if o == nil || IsNil(o.Script) {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetScriptOk() (*string, bool) {
	if o == nil || IsNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasScript() bool {
	if o != nil && !IsNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *ApiRunAdhocRequest) SetScript(v string) {
	o.Script = &v
}

// GetScriptInterpreter returns the ScriptInterpreter field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetScriptInterpreter() string {
	if o == nil || IsNil(o.ScriptInterpreter) {
		var ret string
		return ret
	}
	return *o.ScriptInterpreter
}

// GetScriptInterpreterOk returns a tuple with the ScriptInterpreter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetScriptInterpreterOk() (*string, bool) {
	if o == nil || IsNil(o.ScriptInterpreter) {
		return nil, false
	}
	return o.ScriptInterpreter, true
}

// HasScriptInterpreter returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasScriptInterpreter() bool {
	if o != nil && !IsNil(o.ScriptInterpreter) {
		return true
	}

	return false
}

// SetScriptInterpreter gets a reference to the given string and assigns it to the ScriptInterpreter field.
func (o *ApiRunAdhocRequest) SetScriptInterpreter(v string) {
	o.ScriptInterpreter = &v
}

// GetArgString returns the ArgString field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetArgString() string {
	if o == nil || IsNil(o.ArgString) {
		var ret string
		return ret
	}
	return *o.ArgString
}

// GetArgStringOk returns a tuple with the ArgString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetArgStringOk() (*string, bool) {
	if o == nil || IsNil(o.ArgString) {
		return nil, false
	}
	return o.ArgString, true
}

// HasArgString returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasArgString() bool {
	if o != nil && !IsNil(o.ArgString) {
		return true
	}

	return false
}

// SetArgString gets a reference to the given string and assigns it to the ArgString field.
func (o *ApiRunAdhocRequest) SetArgString(v string) {
	o.ArgString = &v
}

// GetInterpreterArgsQuoted returns the InterpreterArgsQuoted field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetInterpreterArgsQuoted() bool {
	if o == nil || IsNil(o.InterpreterArgsQuoted) {
		var ret bool
		return ret
	}
	return *o.InterpreterArgsQuoted
}

// GetInterpreterArgsQuotedOk returns a tuple with the InterpreterArgsQuoted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetInterpreterArgsQuotedOk() (*bool, bool) {
	if o == nil || IsNil(o.InterpreterArgsQuoted) {
		return nil, false
	}
	return o.InterpreterArgsQuoted, true
}

// HasInterpreterArgsQuoted returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasInterpreterArgsQuoted() bool {
	if o != nil && !IsNil(o.InterpreterArgsQuoted) {
		return true
	}

	return false
}

// SetInterpreterArgsQuoted gets a reference to the given bool and assigns it to the InterpreterArgsQuoted field.
func (o *ApiRunAdhocRequest) SetInterpreterArgsQuoted(v bool) {
	o.InterpreterArgsQuoted = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApiRunAdhocRequest) SetUrl(v string) {
	o.Url = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiRunAdhocRequest) SetDescription(v string) {
	o.Description = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *ApiRunAdhocRequest) SetFilter(v string) {
	o.Filter = &v
}

// GetAsUser returns the AsUser field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetAsUser() string {
	if o == nil || IsNil(o.AsUser) {
		var ret string
		return ret
	}
	return *o.AsUser
}

// GetAsUserOk returns a tuple with the AsUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetAsUserOk() (*string, bool) {
	if o == nil || IsNil(o.AsUser) {
		return nil, false
	}
	return o.AsUser, true
}

// HasAsUser returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasAsUser() bool {
	if o != nil && !IsNil(o.AsUser) {
		return true
	}

	return false
}

// SetAsUser gets a reference to the given string and assigns it to the AsUser field.
func (o *ApiRunAdhocRequest) SetAsUser(v string) {
	o.AsUser = &v
}

// GetFileExtension returns the FileExtension field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetFileExtension() string {
	if o == nil || IsNil(o.FileExtension) {
		var ret string
		return ret
	}
	return *o.FileExtension
}

// GetFileExtensionOk returns a tuple with the FileExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetFileExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.FileExtension) {
		return nil, false
	}
	return o.FileExtension, true
}

// HasFileExtension returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasFileExtension() bool {
	if o != nil && !IsNil(o.FileExtension) {
		return true
	}

	return false
}

// SetFileExtension gets a reference to the given string and assigns it to the FileExtension field.
func (o *ApiRunAdhocRequest) SetFileExtension(v string) {
	o.FileExtension = &v
}

// GetNodeKeepgoing returns the NodeKeepgoing field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetNodeKeepgoing() bool {
	if o == nil || IsNil(o.NodeKeepgoing) {
		var ret bool
		return ret
	}
	return *o.NodeKeepgoing
}

// GetNodeKeepgoingOk returns a tuple with the NodeKeepgoing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetNodeKeepgoingOk() (*bool, bool) {
	if o == nil || IsNil(o.NodeKeepgoing) {
		return nil, false
	}
	return o.NodeKeepgoing, true
}

// HasNodeKeepgoing returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasNodeKeepgoing() bool {
	if o != nil && !IsNil(o.NodeKeepgoing) {
		return true
	}

	return false
}

// SetNodeKeepgoing gets a reference to the given bool and assigns it to the NodeKeepgoing field.
func (o *ApiRunAdhocRequest) SetNodeKeepgoing(v bool) {
	o.NodeKeepgoing = &v
}

// GetNodeThreadcount returns the NodeThreadcount field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetNodeThreadcount() int32 {
	if o == nil || IsNil(o.NodeThreadcount) {
		var ret int32
		return ret
	}
	return *o.NodeThreadcount
}

// GetNodeThreadcountOk returns a tuple with the NodeThreadcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetNodeThreadcountOk() (*int32, bool) {
	if o == nil || IsNil(o.NodeThreadcount) {
		return nil, false
	}
	return o.NodeThreadcount, true
}

// HasNodeThreadcount returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasNodeThreadcount() bool {
	if o != nil && !IsNil(o.NodeThreadcount) {
		return true
	}

	return false
}

// SetNodeThreadcount gets a reference to the given int32 and assigns it to the NodeThreadcount field.
func (o *ApiRunAdhocRequest) SetNodeThreadcount(v int32) {
	o.NodeThreadcount = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ApiRunAdhocRequest) GetMeta() map[string]string {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]string
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRunAdhocRequest) GetMetaOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ApiRunAdhocRequest) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]string and assigns it to the Meta field.
func (o *ApiRunAdhocRequest) SetMeta(v map[string]string) {
	o.Meta = &v
}

func (o ApiRunAdhocRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRunAdhocRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Exec) {
		toSerialize["exec"] = o.Exec
	}
	if !IsNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	if !IsNil(o.ScriptInterpreter) {
		toSerialize["scriptInterpreter"] = o.ScriptInterpreter
	}
	if !IsNil(o.ArgString) {
		toSerialize["argString"] = o.ArgString
	}
	if !IsNil(o.InterpreterArgsQuoted) {
		toSerialize["interpreterArgsQuoted"] = o.InterpreterArgsQuoted
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.AsUser) {
		toSerialize["asUser"] = o.AsUser
	}
	if !IsNil(o.FileExtension) {
		toSerialize["fileExtension"] = o.FileExtension
	}
	if !IsNil(o.NodeKeepgoing) {
		toSerialize["nodeKeepgoing"] = o.NodeKeepgoing
	}
	if !IsNil(o.NodeThreadcount) {
		toSerialize["nodeThreadcount"] = o.NodeThreadcount
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableApiRunAdhocRequest struct {
	value *ApiRunAdhocRequest
	isSet bool
}

func (v NullableApiRunAdhocRequest) Get() *ApiRunAdhocRequest {
	return v.value
}

func (v *NullableApiRunAdhocRequest) Set(val *ApiRunAdhocRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRunAdhocRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRunAdhocRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRunAdhocRequest(val *ApiRunAdhocRequest) *NullableApiRunAdhocRequest {
	return &NullableApiRunAdhocRequest{value: val, isSet: true}
}

func (v NullableApiRunAdhocRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRunAdhocRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


