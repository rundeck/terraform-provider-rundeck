/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SystemReportItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemReportItem{}

// SystemReportItem struct for SystemReportItem
type SystemReportItem struct {
	Label *string `json:"label,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewSystemReportItem instantiates a new SystemReportItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemReportItem() *SystemReportItem {
	this := SystemReportItem{}
	return &this
}

// NewSystemReportItemWithDefaults instantiates a new SystemReportItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemReportItemWithDefaults() *SystemReportItem {
	this := SystemReportItem{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *SystemReportItem) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemReportItem) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *SystemReportItem) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *SystemReportItem) SetLabel(v string) {
	o.Label = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SystemReportItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemReportItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SystemReportItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SystemReportItem) SetName(v string) {
	o.Name = &v
}

func (o SystemReportItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemReportItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableSystemReportItem struct {
	value *SystemReportItem
	isSet bool
}

func (v NullableSystemReportItem) Get() *SystemReportItem {
	return v.value
}

func (v *NullableSystemReportItem) Set(val *SystemReportItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemReportItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemReportItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemReportItem(val *SystemReportItem) *NullableSystemReportItem {
	return &NullableSystemReportItem{value: val, isSet: true}
}

func (v NullableSystemReportItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemReportItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


