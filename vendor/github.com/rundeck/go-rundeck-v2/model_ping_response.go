/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PingResponse{}

// PingResponse struct for PingResponse
type PingResponse struct {
	RunnerId *string `json:"runnerId,omitempty"`
	Completed *bool `json:"completed,omitempty"`
	Message *string `json:"message,omitempty"`
	Iserror *bool `json:"iserror,omitempty"`
}

// NewPingResponse instantiates a new PingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingResponse() *PingResponse {
	this := PingResponse{}
	return &this
}

// NewPingResponseWithDefaults instantiates a new PingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingResponseWithDefaults() *PingResponse {
	this := PingResponse{}
	return &this
}

// GetRunnerId returns the RunnerId field value if set, zero value otherwise.
func (o *PingResponse) GetRunnerId() string {
	if o == nil || IsNil(o.RunnerId) {
		var ret string
		return ret
	}
	return *o.RunnerId
}

// GetRunnerIdOk returns a tuple with the RunnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingResponse) GetRunnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerId) {
		return nil, false
	}
	return o.RunnerId, true
}

// HasRunnerId returns a boolean if a field has been set.
func (o *PingResponse) HasRunnerId() bool {
	if o != nil && !IsNil(o.RunnerId) {
		return true
	}

	return false
}

// SetRunnerId gets a reference to the given string and assigns it to the RunnerId field.
func (o *PingResponse) SetRunnerId(v string) {
	o.RunnerId = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *PingResponse) GetCompleted() bool {
	if o == nil || IsNil(o.Completed) {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingResponse) GetCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *PingResponse) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *PingResponse) SetCompleted(v bool) {
	o.Completed = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PingResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PingResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PingResponse) SetMessage(v string) {
	o.Message = &v
}

// GetIserror returns the Iserror field value if set, zero value otherwise.
func (o *PingResponse) GetIserror() bool {
	if o == nil || IsNil(o.Iserror) {
		var ret bool
		return ret
	}
	return *o.Iserror
}

// GetIserrorOk returns a tuple with the Iserror field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingResponse) GetIserrorOk() (*bool, bool) {
	if o == nil || IsNil(o.Iserror) {
		return nil, false
	}
	return o.Iserror, true
}

// HasIserror returns a boolean if a field has been set.
func (o *PingResponse) HasIserror() bool {
	if o != nil && !IsNil(o.Iserror) {
		return true
	}

	return false
}

// SetIserror gets a reference to the given bool and assigns it to the Iserror field.
func (o *PingResponse) SetIserror(v bool) {
	o.Iserror = &v
}

func (o PingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RunnerId) {
		toSerialize["runnerId"] = o.RunnerId
	}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Iserror) {
		toSerialize["iserror"] = o.Iserror
	}
	return toSerialize, nil
}

type NullablePingResponse struct {
	value *PingResponse
	isSet bool
}

func (v NullablePingResponse) Get() *PingResponse {
	return v.value
}

func (v *NullablePingResponse) Set(val *PingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingResponse(val *PingResponse) *NullablePingResponse {
	return &NullablePingResponse{value: val, isSet: true}
}

func (v NullablePingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


