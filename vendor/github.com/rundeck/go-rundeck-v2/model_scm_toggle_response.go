/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScmToggleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScmToggleResponse{}

// ScmToggleResponse struct for ScmToggleResponse
type ScmToggleResponse struct {
	Modified *bool `json:"modified,omitempty"`
}

// NewScmToggleResponse instantiates a new ScmToggleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScmToggleResponse() *ScmToggleResponse {
	this := ScmToggleResponse{}
	return &this
}

// NewScmToggleResponseWithDefaults instantiates a new ScmToggleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScmToggleResponseWithDefaults() *ScmToggleResponse {
	this := ScmToggleResponse{}
	return &this
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *ScmToggleResponse) GetModified() bool {
	if o == nil || IsNil(o.Modified) {
		var ret bool
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmToggleResponse) GetModifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *ScmToggleResponse) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given bool and assigns it to the Modified field.
func (o *ScmToggleResponse) SetModified(v bool) {
	o.Modified = &v
}

func (o ScmToggleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScmToggleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	return toSerialize, nil
}

type NullableScmToggleResponse struct {
	value *ScmToggleResponse
	isSet bool
}

func (v NullableScmToggleResponse) Get() *ScmToggleResponse {
	return v.value
}

func (v *NullableScmToggleResponse) Set(val *ScmToggleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScmToggleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScmToggleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScmToggleResponse(val *ScmToggleResponse) *NullableScmToggleResponse {
	return &NullableScmToggleResponse{value: val, isSet: true}
}

func (v NullableScmToggleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScmToggleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


