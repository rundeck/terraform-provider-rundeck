/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the JobInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobInfo{}

// JobInfo struct for JobInfo
type JobInfo struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Group *string `json:"group,omitempty"`
	Project *string `json:"project,omitempty"`
	Description *string `json:"description,omitempty"`
	Href *string `json:"href,omitempty"`
	Permalink *string `json:"permalink,omitempty"`
	Scheduled *bool `json:"scheduled,omitempty"`
	ScheduleEnabled *bool `json:"scheduleEnabled,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ServerNodeUUID *string `json:"serverNodeUUID,omitempty"`
	ServerOwner *bool `json:"serverOwner,omitempty"`
	AverageDuration *int64 `json:"averageDuration,omitempty"`
	NextScheduledExecution *time.Time `json:"nextScheduledExecution,omitempty"`
	FutureScheduledExecutions []time.Time `json:"futureScheduledExecutions,omitempty"`
	ProjectDisableExecutions *bool `json:"projectDisableExecutions,omitempty"`
	ProjectDisableSchedule *bool `json:"projectDisableSchedule,omitempty"`
}

// NewJobInfo instantiates a new JobInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobInfo() *JobInfo {
	this := JobInfo{}
	return &this
}

// NewJobInfoWithDefaults instantiates a new JobInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobInfoWithDefaults() *JobInfo {
	this := JobInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JobInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *JobInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *JobInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *JobInfo) SetName(v string) {
	o.Name = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *JobInfo) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *JobInfo) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *JobInfo) SetGroup(v string) {
	o.Group = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *JobInfo) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *JobInfo) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *JobInfo) SetProject(v string) {
	o.Project = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *JobInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *JobInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *JobInfo) SetDescription(v string) {
	o.Description = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *JobInfo) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *JobInfo) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *JobInfo) SetHref(v string) {
	o.Href = &v
}

// GetPermalink returns the Permalink field value if set, zero value otherwise.
func (o *JobInfo) GetPermalink() string {
	if o == nil || IsNil(o.Permalink) {
		var ret string
		return ret
	}
	return *o.Permalink
}

// GetPermalinkOk returns a tuple with the Permalink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetPermalinkOk() (*string, bool) {
	if o == nil || IsNil(o.Permalink) {
		return nil, false
	}
	return o.Permalink, true
}

// HasPermalink returns a boolean if a field has been set.
func (o *JobInfo) HasPermalink() bool {
	if o != nil && !IsNil(o.Permalink) {
		return true
	}

	return false
}

// SetPermalink gets a reference to the given string and assigns it to the Permalink field.
func (o *JobInfo) SetPermalink(v string) {
	o.Permalink = &v
}

// GetScheduled returns the Scheduled field value if set, zero value otherwise.
func (o *JobInfo) GetScheduled() bool {
	if o == nil || IsNil(o.Scheduled) {
		var ret bool
		return ret
	}
	return *o.Scheduled
}

// GetScheduledOk returns a tuple with the Scheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetScheduledOk() (*bool, bool) {
	if o == nil || IsNil(o.Scheduled) {
		return nil, false
	}
	return o.Scheduled, true
}

// HasScheduled returns a boolean if a field has been set.
func (o *JobInfo) HasScheduled() bool {
	if o != nil && !IsNil(o.Scheduled) {
		return true
	}

	return false
}

// SetScheduled gets a reference to the given bool and assigns it to the Scheduled field.
func (o *JobInfo) SetScheduled(v bool) {
	o.Scheduled = &v
}

// GetScheduleEnabled returns the ScheduleEnabled field value if set, zero value otherwise.
func (o *JobInfo) GetScheduleEnabled() bool {
	if o == nil || IsNil(o.ScheduleEnabled) {
		var ret bool
		return ret
	}
	return *o.ScheduleEnabled
}

// GetScheduleEnabledOk returns a tuple with the ScheduleEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetScheduleEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ScheduleEnabled) {
		return nil, false
	}
	return o.ScheduleEnabled, true
}

// HasScheduleEnabled returns a boolean if a field has been set.
func (o *JobInfo) HasScheduleEnabled() bool {
	if o != nil && !IsNil(o.ScheduleEnabled) {
		return true
	}

	return false
}

// SetScheduleEnabled gets a reference to the given bool and assigns it to the ScheduleEnabled field.
func (o *JobInfo) SetScheduleEnabled(v bool) {
	o.ScheduleEnabled = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *JobInfo) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *JobInfo) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *JobInfo) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetServerNodeUUID returns the ServerNodeUUID field value if set, zero value otherwise.
func (o *JobInfo) GetServerNodeUUID() string {
	if o == nil || IsNil(o.ServerNodeUUID) {
		var ret string
		return ret
	}
	return *o.ServerNodeUUID
}

// GetServerNodeUUIDOk returns a tuple with the ServerNodeUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetServerNodeUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.ServerNodeUUID) {
		return nil, false
	}
	return o.ServerNodeUUID, true
}

// HasServerNodeUUID returns a boolean if a field has been set.
func (o *JobInfo) HasServerNodeUUID() bool {
	if o != nil && !IsNil(o.ServerNodeUUID) {
		return true
	}

	return false
}

// SetServerNodeUUID gets a reference to the given string and assigns it to the ServerNodeUUID field.
func (o *JobInfo) SetServerNodeUUID(v string) {
	o.ServerNodeUUID = &v
}

// GetServerOwner returns the ServerOwner field value if set, zero value otherwise.
func (o *JobInfo) GetServerOwner() bool {
	if o == nil || IsNil(o.ServerOwner) {
		var ret bool
		return ret
	}
	return *o.ServerOwner
}

// GetServerOwnerOk returns a tuple with the ServerOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetServerOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.ServerOwner) {
		return nil, false
	}
	return o.ServerOwner, true
}

// HasServerOwner returns a boolean if a field has been set.
func (o *JobInfo) HasServerOwner() bool {
	if o != nil && !IsNil(o.ServerOwner) {
		return true
	}

	return false
}

// SetServerOwner gets a reference to the given bool and assigns it to the ServerOwner field.
func (o *JobInfo) SetServerOwner(v bool) {
	o.ServerOwner = &v
}

// GetAverageDuration returns the AverageDuration field value if set, zero value otherwise.
func (o *JobInfo) GetAverageDuration() int64 {
	if o == nil || IsNil(o.AverageDuration) {
		var ret int64
		return ret
	}
	return *o.AverageDuration
}

// GetAverageDurationOk returns a tuple with the AverageDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetAverageDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.AverageDuration) {
		return nil, false
	}
	return o.AverageDuration, true
}

// HasAverageDuration returns a boolean if a field has been set.
func (o *JobInfo) HasAverageDuration() bool {
	if o != nil && !IsNil(o.AverageDuration) {
		return true
	}

	return false
}

// SetAverageDuration gets a reference to the given int64 and assigns it to the AverageDuration field.
func (o *JobInfo) SetAverageDuration(v int64) {
	o.AverageDuration = &v
}

// GetNextScheduledExecution returns the NextScheduledExecution field value if set, zero value otherwise.
func (o *JobInfo) GetNextScheduledExecution() time.Time {
	if o == nil || IsNil(o.NextScheduledExecution) {
		var ret time.Time
		return ret
	}
	return *o.NextScheduledExecution
}

// GetNextScheduledExecutionOk returns a tuple with the NextScheduledExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetNextScheduledExecutionOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextScheduledExecution) {
		return nil, false
	}
	return o.NextScheduledExecution, true
}

// HasNextScheduledExecution returns a boolean if a field has been set.
func (o *JobInfo) HasNextScheduledExecution() bool {
	if o != nil && !IsNil(o.NextScheduledExecution) {
		return true
	}

	return false
}

// SetNextScheduledExecution gets a reference to the given time.Time and assigns it to the NextScheduledExecution field.
func (o *JobInfo) SetNextScheduledExecution(v time.Time) {
	o.NextScheduledExecution = &v
}

// GetFutureScheduledExecutions returns the FutureScheduledExecutions field value if set, zero value otherwise.
func (o *JobInfo) GetFutureScheduledExecutions() []time.Time {
	if o == nil || IsNil(o.FutureScheduledExecutions) {
		var ret []time.Time
		return ret
	}
	return o.FutureScheduledExecutions
}

// GetFutureScheduledExecutionsOk returns a tuple with the FutureScheduledExecutions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetFutureScheduledExecutionsOk() ([]time.Time, bool) {
	if o == nil || IsNil(o.FutureScheduledExecutions) {
		return nil, false
	}
	return o.FutureScheduledExecutions, true
}

// HasFutureScheduledExecutions returns a boolean if a field has been set.
func (o *JobInfo) HasFutureScheduledExecutions() bool {
	if o != nil && !IsNil(o.FutureScheduledExecutions) {
		return true
	}

	return false
}

// SetFutureScheduledExecutions gets a reference to the given []time.Time and assigns it to the FutureScheduledExecutions field.
func (o *JobInfo) SetFutureScheduledExecutions(v []time.Time) {
	o.FutureScheduledExecutions = v
}

// GetProjectDisableExecutions returns the ProjectDisableExecutions field value if set, zero value otherwise.
func (o *JobInfo) GetProjectDisableExecutions() bool {
	if o == nil || IsNil(o.ProjectDisableExecutions) {
		var ret bool
		return ret
	}
	return *o.ProjectDisableExecutions
}

// GetProjectDisableExecutionsOk returns a tuple with the ProjectDisableExecutions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetProjectDisableExecutionsOk() (*bool, bool) {
	if o == nil || IsNil(o.ProjectDisableExecutions) {
		return nil, false
	}
	return o.ProjectDisableExecutions, true
}

// HasProjectDisableExecutions returns a boolean if a field has been set.
func (o *JobInfo) HasProjectDisableExecutions() bool {
	if o != nil && !IsNil(o.ProjectDisableExecutions) {
		return true
	}

	return false
}

// SetProjectDisableExecutions gets a reference to the given bool and assigns it to the ProjectDisableExecutions field.
func (o *JobInfo) SetProjectDisableExecutions(v bool) {
	o.ProjectDisableExecutions = &v
}

// GetProjectDisableSchedule returns the ProjectDisableSchedule field value if set, zero value otherwise.
func (o *JobInfo) GetProjectDisableSchedule() bool {
	if o == nil || IsNil(o.ProjectDisableSchedule) {
		var ret bool
		return ret
	}
	return *o.ProjectDisableSchedule
}

// GetProjectDisableScheduleOk returns a tuple with the ProjectDisableSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobInfo) GetProjectDisableScheduleOk() (*bool, bool) {
	if o == nil || IsNil(o.ProjectDisableSchedule) {
		return nil, false
	}
	return o.ProjectDisableSchedule, true
}

// HasProjectDisableSchedule returns a boolean if a field has been set.
func (o *JobInfo) HasProjectDisableSchedule() bool {
	if o != nil && !IsNil(o.ProjectDisableSchedule) {
		return true
	}

	return false
}

// SetProjectDisableSchedule gets a reference to the given bool and assigns it to the ProjectDisableSchedule field.
func (o *JobInfo) SetProjectDisableSchedule(v bool) {
	o.ProjectDisableSchedule = &v
}

func (o JobInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Permalink) {
		toSerialize["permalink"] = o.Permalink
	}
	if !IsNil(o.Scheduled) {
		toSerialize["scheduled"] = o.Scheduled
	}
	if !IsNil(o.ScheduleEnabled) {
		toSerialize["scheduleEnabled"] = o.ScheduleEnabled
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ServerNodeUUID) {
		toSerialize["serverNodeUUID"] = o.ServerNodeUUID
	}
	if !IsNil(o.ServerOwner) {
		toSerialize["serverOwner"] = o.ServerOwner
	}
	if !IsNil(o.AverageDuration) {
		toSerialize["averageDuration"] = o.AverageDuration
	}
	if !IsNil(o.NextScheduledExecution) {
		toSerialize["nextScheduledExecution"] = o.NextScheduledExecution
	}
	if !IsNil(o.FutureScheduledExecutions) {
		toSerialize["futureScheduledExecutions"] = o.FutureScheduledExecutions
	}
	if !IsNil(o.ProjectDisableExecutions) {
		toSerialize["projectDisableExecutions"] = o.ProjectDisableExecutions
	}
	if !IsNil(o.ProjectDisableSchedule) {
		toSerialize["projectDisableSchedule"] = o.ProjectDisableSchedule
	}
	return toSerialize, nil
}

type NullableJobInfo struct {
	value *JobInfo
	isSet bool
}

func (v NullableJobInfo) Get() *JobInfo {
	return v.value
}

func (v *NullableJobInfo) Set(val *JobInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableJobInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableJobInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobInfo(val *JobInfo) *NullableJobInfo {
	return &NullableJobInfo{value: val, isSet: true}
}

func (v NullableJobInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


