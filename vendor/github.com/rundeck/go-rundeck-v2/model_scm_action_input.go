/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScmActionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScmActionInput{}

// ScmActionInput struct for ScmActionInput
type ScmActionInput struct {
	// ID for the action
	ActionId *string `json:"actionId,omitempty"`
	Integration *string `json:"integration,omitempty"`
	// Display title for the action
	Title *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	Fields []ScmPluginInputField `json:"fields,omitempty"`
	ImportItems []ScmImportActionItem `json:"importItems,omitempty"`
	ExportItems []ScmExportActionItem `json:"exportItems,omitempty"`
}

// NewScmActionInput instantiates a new ScmActionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScmActionInput() *ScmActionInput {
	this := ScmActionInput{}
	return &this
}

// NewScmActionInputWithDefaults instantiates a new ScmActionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScmActionInputWithDefaults() *ScmActionInput {
	this := ScmActionInput{}
	return &this
}

// GetActionId returns the ActionId field value if set, zero value otherwise.
func (o *ScmActionInput) GetActionId() string {
	if o == nil || IsNil(o.ActionId) {
		var ret string
		return ret
	}
	return *o.ActionId
}

// GetActionIdOk returns a tuple with the ActionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmActionInput) GetActionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActionId) {
		return nil, false
	}
	return o.ActionId, true
}

// HasActionId returns a boolean if a field has been set.
func (o *ScmActionInput) HasActionId() bool {
	if o != nil && !IsNil(o.ActionId) {
		return true
	}

	return false
}

// SetActionId gets a reference to the given string and assigns it to the ActionId field.
func (o *ScmActionInput) SetActionId(v string) {
	o.ActionId = &v
}

// GetIntegration returns the Integration field value if set, zero value otherwise.
func (o *ScmActionInput) GetIntegration() string {
	if o == nil || IsNil(o.Integration) {
		var ret string
		return ret
	}
	return *o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmActionInput) GetIntegrationOk() (*string, bool) {
	if o == nil || IsNil(o.Integration) {
		return nil, false
	}
	return o.Integration, true
}

// HasIntegration returns a boolean if a field has been set.
func (o *ScmActionInput) HasIntegration() bool {
	if o != nil && !IsNil(o.Integration) {
		return true
	}

	return false
}

// SetIntegration gets a reference to the given string and assigns it to the Integration field.
func (o *ScmActionInput) SetIntegration(v string) {
	o.Integration = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ScmActionInput) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmActionInput) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ScmActionInput) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ScmActionInput) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ScmActionInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmActionInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ScmActionInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ScmActionInput) SetDescription(v string) {
	o.Description = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *ScmActionInput) GetFields() []ScmPluginInputField {
	if o == nil || IsNil(o.Fields) {
		var ret []ScmPluginInputField
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmActionInput) GetFieldsOk() ([]ScmPluginInputField, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *ScmActionInput) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []ScmPluginInputField and assigns it to the Fields field.
func (o *ScmActionInput) SetFields(v []ScmPluginInputField) {
	o.Fields = v
}

// GetImportItems returns the ImportItems field value if set, zero value otherwise.
func (o *ScmActionInput) GetImportItems() []ScmImportActionItem {
	if o == nil || IsNil(o.ImportItems) {
		var ret []ScmImportActionItem
		return ret
	}
	return o.ImportItems
}

// GetImportItemsOk returns a tuple with the ImportItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmActionInput) GetImportItemsOk() ([]ScmImportActionItem, bool) {
	if o == nil || IsNil(o.ImportItems) {
		return nil, false
	}
	return o.ImportItems, true
}

// HasImportItems returns a boolean if a field has been set.
func (o *ScmActionInput) HasImportItems() bool {
	if o != nil && !IsNil(o.ImportItems) {
		return true
	}

	return false
}

// SetImportItems gets a reference to the given []ScmImportActionItem and assigns it to the ImportItems field.
func (o *ScmActionInput) SetImportItems(v []ScmImportActionItem) {
	o.ImportItems = v
}

// GetExportItems returns the ExportItems field value if set, zero value otherwise.
func (o *ScmActionInput) GetExportItems() []ScmExportActionItem {
	if o == nil || IsNil(o.ExportItems) {
		var ret []ScmExportActionItem
		return ret
	}
	return o.ExportItems
}

// GetExportItemsOk returns a tuple with the ExportItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmActionInput) GetExportItemsOk() ([]ScmExportActionItem, bool) {
	if o == nil || IsNil(o.ExportItems) {
		return nil, false
	}
	return o.ExportItems, true
}

// HasExportItems returns a boolean if a field has been set.
func (o *ScmActionInput) HasExportItems() bool {
	if o != nil && !IsNil(o.ExportItems) {
		return true
	}

	return false
}

// SetExportItems gets a reference to the given []ScmExportActionItem and assigns it to the ExportItems field.
func (o *ScmActionInput) SetExportItems(v []ScmExportActionItem) {
	o.ExportItems = v
}

func (o ScmActionInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScmActionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionId) {
		toSerialize["actionId"] = o.ActionId
	}
	if !IsNil(o.Integration) {
		toSerialize["integration"] = o.Integration
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.ImportItems) {
		toSerialize["importItems"] = o.ImportItems
	}
	if !IsNil(o.ExportItems) {
		toSerialize["exportItems"] = o.ExportItems
	}
	return toSerialize, nil
}

type NullableScmActionInput struct {
	value *ScmActionInput
	isSet bool
}

func (v NullableScmActionInput) Get() *ScmActionInput {
	return v.value
}

func (v *NullableScmActionInput) Set(val *ScmActionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableScmActionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableScmActionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScmActionInput(val *ScmActionInput) *NullableScmActionInput {
	return &NullableScmActionInput{value: val, isSet: true}
}

func (v NullableScmActionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScmActionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


