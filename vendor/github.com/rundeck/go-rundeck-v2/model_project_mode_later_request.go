/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectModeLaterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectModeLaterRequest{}

// ProjectModeLaterRequest Request to enable/disable executions or schedules after a time delay.
type ProjectModeLaterRequest struct {
	// Mode to change, one of `executions` or `schedule`
	Type *string `json:"type,omitempty"`
	// Time duration expression.  A series of: an integer followed by a unit.  Units: * `s` - seconds (default) * `m` - minutes * `h` - hours * `d` - days * `w` - weeks * `y` - years.  Examples: `1d12h`, `3600` (defaults to seconds), `15m30s`. 
	Value *string `json:"value,omitempty" validate:"regexp=((\\\\d+)[smhdwy]?)+"`
}

// NewProjectModeLaterRequest instantiates a new ProjectModeLaterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectModeLaterRequest() *ProjectModeLaterRequest {
	this := ProjectModeLaterRequest{}
	return &this
}

// NewProjectModeLaterRequestWithDefaults instantiates a new ProjectModeLaterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectModeLaterRequestWithDefaults() *ProjectModeLaterRequest {
	this := ProjectModeLaterRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ProjectModeLaterRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectModeLaterRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ProjectModeLaterRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ProjectModeLaterRequest) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ProjectModeLaterRequest) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectModeLaterRequest) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ProjectModeLaterRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ProjectModeLaterRequest) SetValue(v string) {
	o.Value = &v
}

func (o ProjectModeLaterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectModeLaterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableProjectModeLaterRequest struct {
	value *ProjectModeLaterRequest
	isSet bool
}

func (v NullableProjectModeLaterRequest) Get() *ProjectModeLaterRequest {
	return v.value
}

func (v *NullableProjectModeLaterRequest) Set(val *ProjectModeLaterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectModeLaterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectModeLaterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectModeLaterRequest(val *ProjectModeLaterRequest) *NullableProjectModeLaterRequest {
	return &NullableProjectModeLaterRequest{value: val, isSet: true}
}

func (v NullableProjectModeLaterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectModeLaterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


