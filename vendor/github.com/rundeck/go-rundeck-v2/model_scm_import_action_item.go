/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScmImportActionItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScmImportActionItem{}

// ScmImportActionItem struct for ScmImportActionItem
type ScmImportActionItem struct {
	// ID of the repo item, e.g. a file path
	ItemId *string `json:"itemId,omitempty"`
	Job *JobReference `json:"job,omitempty"`
	// true if there is an associated `job`
	Tracked *bool `json:"tracked,omitempty"`
	// whether the job was deleted on remote and requires to be deleted
	Deleted *bool `json:"deleted,omitempty"`
	// file status String, the same value as in the `synchState` of Job Scm Status result.
	Status *string `json:"status,omitempty"`
}

// NewScmImportActionItem instantiates a new ScmImportActionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScmImportActionItem() *ScmImportActionItem {
	this := ScmImportActionItem{}
	return &this
}

// NewScmImportActionItemWithDefaults instantiates a new ScmImportActionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScmImportActionItemWithDefaults() *ScmImportActionItem {
	this := ScmImportActionItem{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *ScmImportActionItem) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmImportActionItem) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *ScmImportActionItem) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *ScmImportActionItem) SetItemId(v string) {
	o.ItemId = &v
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *ScmImportActionItem) GetJob() JobReference {
	if o == nil || IsNil(o.Job) {
		var ret JobReference
		return ret
	}
	return *o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmImportActionItem) GetJobOk() (*JobReference, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// HasJob returns a boolean if a field has been set.
func (o *ScmImportActionItem) HasJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given JobReference and assigns it to the Job field.
func (o *ScmImportActionItem) SetJob(v JobReference) {
	o.Job = &v
}

// GetTracked returns the Tracked field value if set, zero value otherwise.
func (o *ScmImportActionItem) GetTracked() bool {
	if o == nil || IsNil(o.Tracked) {
		var ret bool
		return ret
	}
	return *o.Tracked
}

// GetTrackedOk returns a tuple with the Tracked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmImportActionItem) GetTrackedOk() (*bool, bool) {
	if o == nil || IsNil(o.Tracked) {
		return nil, false
	}
	return o.Tracked, true
}

// HasTracked returns a boolean if a field has been set.
func (o *ScmImportActionItem) HasTracked() bool {
	if o != nil && !IsNil(o.Tracked) {
		return true
	}

	return false
}

// SetTracked gets a reference to the given bool and assigns it to the Tracked field.
func (o *ScmImportActionItem) SetTracked(v bool) {
	o.Tracked = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *ScmImportActionItem) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmImportActionItem) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *ScmImportActionItem) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *ScmImportActionItem) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ScmImportActionItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScmImportActionItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ScmImportActionItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ScmImportActionItem) SetStatus(v string) {
	o.Status = &v
}

func (o ScmImportActionItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScmImportActionItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["itemId"] = o.ItemId
	}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	if !IsNil(o.Tracked) {
		toSerialize["tracked"] = o.Tracked
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableScmImportActionItem struct {
	value *ScmImportActionItem
	isSet bool
}

func (v NullableScmImportActionItem) Get() *ScmImportActionItem {
	return v.value
}

func (v *NullableScmImportActionItem) Set(val *ScmImportActionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableScmImportActionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableScmImportActionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScmImportActionItem(val *ScmImportActionItem) *NullableScmImportActionItem {
	return &NullableScmImportActionItem{value: val, isSet: true}
}

func (v NullableScmImportActionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScmImportActionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


