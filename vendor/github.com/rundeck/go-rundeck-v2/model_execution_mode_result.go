/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExecutionModeResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionModeResult{}

// ExecutionModeResult struct for ExecutionModeResult
type ExecutionModeResult struct {
	ExecutionMode *string `json:"executionMode,omitempty"`
}

// NewExecutionModeResult instantiates a new ExecutionModeResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionModeResult() *ExecutionModeResult {
	this := ExecutionModeResult{}
	return &this
}

// NewExecutionModeResultWithDefaults instantiates a new ExecutionModeResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionModeResultWithDefaults() *ExecutionModeResult {
	this := ExecutionModeResult{}
	return &this
}

// GetExecutionMode returns the ExecutionMode field value if set, zero value otherwise.
func (o *ExecutionModeResult) GetExecutionMode() string {
	if o == nil || IsNil(o.ExecutionMode) {
		var ret string
		return ret
	}
	return *o.ExecutionMode
}

// GetExecutionModeOk returns a tuple with the ExecutionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionModeResult) GetExecutionModeOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionMode) {
		return nil, false
	}
	return o.ExecutionMode, true
}

// HasExecutionMode returns a boolean if a field has been set.
func (o *ExecutionModeResult) HasExecutionMode() bool {
	if o != nil && !IsNil(o.ExecutionMode) {
		return true
	}

	return false
}

// SetExecutionMode gets a reference to the given string and assigns it to the ExecutionMode field.
func (o *ExecutionModeResult) SetExecutionMode(v string) {
	o.ExecutionMode = &v
}

func (o ExecutionModeResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionModeResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionMode) {
		toSerialize["executionMode"] = o.ExecutionMode
	}
	return toSerialize, nil
}

type NullableExecutionModeResult struct {
	value *ExecutionModeResult
	isSet bool
}

func (v NullableExecutionModeResult) Get() *ExecutionModeResult {
	return v.value
}

func (v *NullableExecutionModeResult) Set(val *ExecutionModeResult) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionModeResult) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionModeResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionModeResult(val *ExecutionModeResult) *NullableExecutionModeResult {
	return &NullableExecutionModeResult{value: val, isSet: true}
}

func (v NullableExecutionModeResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionModeResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


