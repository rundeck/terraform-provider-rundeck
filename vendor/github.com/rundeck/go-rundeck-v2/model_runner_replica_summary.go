/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the RunnerReplicaSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunnerReplicaSummary{}

// RunnerReplicaSummary struct for RunnerReplicaSummary
type RunnerReplicaSummary struct {
	ReplicaId *string `json:"replicaId,omitempty"`
	RunnerId *string `json:"runnerId,omitempty"`
	SessionId *string `json:"sessionId,omitempty"`
	Status *string `json:"status,omitempty"`
	Version *string `json:"version,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	InstallationPath *string `json:"installationPath,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	CreateTime *time.Time `json:"createTime,omitempty"`
	LastCheckin *string `json:"lastCheckin,omitempty"`
	LastCheckinAlert *bool `json:"lastCheckinAlert,omitempty"`
	Uptime *int64 `json:"uptime,omitempty"`
}

// NewRunnerReplicaSummary instantiates a new RunnerReplicaSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunnerReplicaSummary() *RunnerReplicaSummary {
	this := RunnerReplicaSummary{}
	return &this
}

// NewRunnerReplicaSummaryWithDefaults instantiates a new RunnerReplicaSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunnerReplicaSummaryWithDefaults() *RunnerReplicaSummary {
	this := RunnerReplicaSummary{}
	return &this
}

// GetReplicaId returns the ReplicaId field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetReplicaId() string {
	if o == nil || IsNil(o.ReplicaId) {
		var ret string
		return ret
	}
	return *o.ReplicaId
}

// GetReplicaIdOk returns a tuple with the ReplicaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetReplicaIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicaId) {
		return nil, false
	}
	return o.ReplicaId, true
}

// HasReplicaId returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasReplicaId() bool {
	if o != nil && !IsNil(o.ReplicaId) {
		return true
	}

	return false
}

// SetReplicaId gets a reference to the given string and assigns it to the ReplicaId field.
func (o *RunnerReplicaSummary) SetReplicaId(v string) {
	o.ReplicaId = &v
}

// GetRunnerId returns the RunnerId field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetRunnerId() string {
	if o == nil || IsNil(o.RunnerId) {
		var ret string
		return ret
	}
	return *o.RunnerId
}

// GetRunnerIdOk returns a tuple with the RunnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetRunnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerId) {
		return nil, false
	}
	return o.RunnerId, true
}

// HasRunnerId returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasRunnerId() bool {
	if o != nil && !IsNil(o.RunnerId) {
		return true
	}

	return false
}

// SetRunnerId gets a reference to the given string and assigns it to the RunnerId field.
func (o *RunnerReplicaSummary) SetRunnerId(v string) {
	o.RunnerId = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *RunnerReplicaSummary) SetSessionId(v string) {
	o.SessionId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RunnerReplicaSummary) SetStatus(v string) {
	o.Status = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *RunnerReplicaSummary) SetVersion(v string) {
	o.Version = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *RunnerReplicaSummary) SetHostname(v string) {
	o.Hostname = &v
}

// GetInstallationPath returns the InstallationPath field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetInstallationPath() string {
	if o == nil || IsNil(o.InstallationPath) {
		var ret string
		return ret
	}
	return *o.InstallationPath
}

// GetInstallationPathOk returns a tuple with the InstallationPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetInstallationPathOk() (*string, bool) {
	if o == nil || IsNil(o.InstallationPath) {
		return nil, false
	}
	return o.InstallationPath, true
}

// HasInstallationPath returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasInstallationPath() bool {
	if o != nil && !IsNil(o.InstallationPath) {
		return true
	}

	return false
}

// SetInstallationPath gets a reference to the given string and assigns it to the InstallationPath field.
func (o *RunnerReplicaSummary) SetInstallationPath(v string) {
	o.InstallationPath = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *RunnerReplicaSummary) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *RunnerReplicaSummary) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetLastCheckin returns the LastCheckin field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetLastCheckin() string {
	if o == nil || IsNil(o.LastCheckin) {
		var ret string
		return ret
	}
	return *o.LastCheckin
}

// GetLastCheckinOk returns a tuple with the LastCheckin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetLastCheckinOk() (*string, bool) {
	if o == nil || IsNil(o.LastCheckin) {
		return nil, false
	}
	return o.LastCheckin, true
}

// HasLastCheckin returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasLastCheckin() bool {
	if o != nil && !IsNil(o.LastCheckin) {
		return true
	}

	return false
}

// SetLastCheckin gets a reference to the given string and assigns it to the LastCheckin field.
func (o *RunnerReplicaSummary) SetLastCheckin(v string) {
	o.LastCheckin = &v
}

// GetLastCheckinAlert returns the LastCheckinAlert field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetLastCheckinAlert() bool {
	if o == nil || IsNil(o.LastCheckinAlert) {
		var ret bool
		return ret
	}
	return *o.LastCheckinAlert
}

// GetLastCheckinAlertOk returns a tuple with the LastCheckinAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetLastCheckinAlertOk() (*bool, bool) {
	if o == nil || IsNil(o.LastCheckinAlert) {
		return nil, false
	}
	return o.LastCheckinAlert, true
}

// HasLastCheckinAlert returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasLastCheckinAlert() bool {
	if o != nil && !IsNil(o.LastCheckinAlert) {
		return true
	}

	return false
}

// SetLastCheckinAlert gets a reference to the given bool and assigns it to the LastCheckinAlert field.
func (o *RunnerReplicaSummary) SetLastCheckinAlert(v bool) {
	o.LastCheckinAlert = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *RunnerReplicaSummary) GetUptime() int64 {
	if o == nil || IsNil(o.Uptime) {
		var ret int64
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaSummary) GetUptimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *RunnerReplicaSummary) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int64 and assigns it to the Uptime field.
func (o *RunnerReplicaSummary) SetUptime(v int64) {
	o.Uptime = &v
}

func (o RunnerReplicaSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunnerReplicaSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReplicaId) {
		toSerialize["replicaId"] = o.ReplicaId
	}
	if !IsNil(o.RunnerId) {
		toSerialize["runnerId"] = o.RunnerId
	}
	if !IsNil(o.SessionId) {
		toSerialize["sessionId"] = o.SessionId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.InstallationPath) {
		toSerialize["installationPath"] = o.InstallationPath
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.LastCheckin) {
		toSerialize["lastCheckin"] = o.LastCheckin
	}
	if !IsNil(o.LastCheckinAlert) {
		toSerialize["lastCheckinAlert"] = o.LastCheckinAlert
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	return toSerialize, nil
}

type NullableRunnerReplicaSummary struct {
	value *RunnerReplicaSummary
	isSet bool
}

func (v NullableRunnerReplicaSummary) Get() *RunnerReplicaSummary {
	return v.value
}

func (v *NullableRunnerReplicaSummary) Set(val *RunnerReplicaSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRunnerReplicaSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRunnerReplicaSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunnerReplicaSummary(val *RunnerReplicaSummary) *NullableRunnerReplicaSummary {
	return &NullableRunnerReplicaSummary{value: val, isSet: true}
}

func (v NullableRunnerReplicaSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunnerReplicaSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


