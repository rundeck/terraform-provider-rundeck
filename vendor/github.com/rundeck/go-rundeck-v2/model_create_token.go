/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateToken{}

// CreateToken Create Token request using a list of Roles
type CreateToken struct {
	// since: v19
	Roles []string `json:"roles,omitempty"`
	User *string `json:"user,omitempty"`
	// since: v19
	Duration *string `json:"duration,omitempty"`
	// since: v19
	Name *string `json:"name,omitempty"`
}

// NewCreateToken instantiates a new CreateToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateToken() *CreateToken {
	this := CreateToken{}
	return &this
}

// NewCreateTokenWithDefaults instantiates a new CreateToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTokenWithDefaults() *CreateToken {
	this := CreateToken{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *CreateToken) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateToken) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *CreateToken) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *CreateToken) SetRoles(v []string) {
	o.Roles = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *CreateToken) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateToken) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *CreateToken) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *CreateToken) SetUser(v string) {
	o.User = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *CreateToken) GetDuration() string {
	if o == nil || IsNil(o.Duration) {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateToken) GetDurationOk() (*string, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *CreateToken) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *CreateToken) SetDuration(v string) {
	o.Duration = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateToken) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateToken) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateToken) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateToken) SetName(v string) {
	o.Name = &v
}

func (o CreateToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableCreateToken struct {
	value *CreateToken
	isSet bool
}

func (v NullableCreateToken) Get() *CreateToken {
	return v.value
}

func (v *NullableCreateToken) Set(val *CreateToken) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateToken) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateToken(val *CreateToken) *NullableCreateToken {
	return &NullableCreateToken{value: val, isSet: true}
}

func (v NullableCreateToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


