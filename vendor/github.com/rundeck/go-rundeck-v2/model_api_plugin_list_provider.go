/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiPluginListProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPluginListProvider{}

// ApiPluginListProvider struct for ApiPluginListProvider
type ApiPluginListProvider struct {
	Service *string `json:"service,omitempty"`
	ArtifactName *string `json:"artifactName,omitempty"`
	Name *string `json:"name,omitempty"`
	Id *string `json:"id,omitempty"`
	Builtin *bool `json:"builtin,omitempty"`
	PluginVersion *string `json:"pluginVersion,omitempty"`
	Title *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	Author *string `json:"author,omitempty"`
	// URL to icon file for the plugin if present. Since: v40
	IconUrl *string `json:"iconUrl,omitempty"`
	// Map of metadata about the plugin if present. Since: v40
	ProviderMetadata *map[string]string `json:"providerMetadata,omitempty"`
	// Indication of whether the plugin is marked as highlighted. Since: v51
	IsHighlighted *bool `json:"isHighlighted,omitempty"`
	// Order of the highlighted plugin. Since: v51
	HighlightedOrder *int32 `json:"highlightedOrder,omitempty"`
}

// NewApiPluginListProvider instantiates a new ApiPluginListProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPluginListProvider() *ApiPluginListProvider {
	this := ApiPluginListProvider{}
	return &this
}

// NewApiPluginListProviderWithDefaults instantiates a new ApiPluginListProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPluginListProviderWithDefaults() *ApiPluginListProvider {
	this := ApiPluginListProvider{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *ApiPluginListProvider) SetService(v string) {
	o.Service = &v
}

// GetArtifactName returns the ArtifactName field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetArtifactName() string {
	if o == nil || IsNil(o.ArtifactName) {
		var ret string
		return ret
	}
	return *o.ArtifactName
}

// GetArtifactNameOk returns a tuple with the ArtifactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetArtifactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactName) {
		return nil, false
	}
	return o.ArtifactName, true
}

// HasArtifactName returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasArtifactName() bool {
	if o != nil && !IsNil(o.ArtifactName) {
		return true
	}

	return false
}

// SetArtifactName gets a reference to the given string and assigns it to the ArtifactName field.
func (o *ApiPluginListProvider) SetArtifactName(v string) {
	o.ArtifactName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiPluginListProvider) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiPluginListProvider) SetId(v string) {
	o.Id = &v
}

// GetBuiltin returns the Builtin field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetBuiltin() bool {
	if o == nil || IsNil(o.Builtin) {
		var ret bool
		return ret
	}
	return *o.Builtin
}

// GetBuiltinOk returns a tuple with the Builtin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetBuiltinOk() (*bool, bool) {
	if o == nil || IsNil(o.Builtin) {
		return nil, false
	}
	return o.Builtin, true
}

// HasBuiltin returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasBuiltin() bool {
	if o != nil && !IsNil(o.Builtin) {
		return true
	}

	return false
}

// SetBuiltin gets a reference to the given bool and assigns it to the Builtin field.
func (o *ApiPluginListProvider) SetBuiltin(v bool) {
	o.Builtin = &v
}

// GetPluginVersion returns the PluginVersion field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetPluginVersion() string {
	if o == nil || IsNil(o.PluginVersion) {
		var ret string
		return ret
	}
	return *o.PluginVersion
}

// GetPluginVersionOk returns a tuple with the PluginVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetPluginVersionOk() (*string, bool) {
	if o == nil || IsNil(o.PluginVersion) {
		return nil, false
	}
	return o.PluginVersion, true
}

// HasPluginVersion returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasPluginVersion() bool {
	if o != nil && !IsNil(o.PluginVersion) {
		return true
	}

	return false
}

// SetPluginVersion gets a reference to the given string and assigns it to the PluginVersion field.
func (o *ApiPluginListProvider) SetPluginVersion(v string) {
	o.PluginVersion = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ApiPluginListProvider) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiPluginListProvider) SetDescription(v string) {
	o.Description = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *ApiPluginListProvider) SetAuthor(v string) {
	o.Author = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *ApiPluginListProvider) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetProviderMetadata returns the ProviderMetadata field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetProviderMetadata() map[string]string {
	if o == nil || IsNil(o.ProviderMetadata) {
		var ret map[string]string
		return ret
	}
	return *o.ProviderMetadata
}

// GetProviderMetadataOk returns a tuple with the ProviderMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetProviderMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProviderMetadata) {
		return nil, false
	}
	return o.ProviderMetadata, true
}

// HasProviderMetadata returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasProviderMetadata() bool {
	if o != nil && !IsNil(o.ProviderMetadata) {
		return true
	}

	return false
}

// SetProviderMetadata gets a reference to the given map[string]string and assigns it to the ProviderMetadata field.
func (o *ApiPluginListProvider) SetProviderMetadata(v map[string]string) {
	o.ProviderMetadata = &v
}

// GetIsHighlighted returns the IsHighlighted field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetIsHighlighted() bool {
	if o == nil || IsNil(o.IsHighlighted) {
		var ret bool
		return ret
	}
	return *o.IsHighlighted
}

// GetIsHighlightedOk returns a tuple with the IsHighlighted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetIsHighlightedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHighlighted) {
		return nil, false
	}
	return o.IsHighlighted, true
}

// HasIsHighlighted returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasIsHighlighted() bool {
	if o != nil && !IsNil(o.IsHighlighted) {
		return true
	}

	return false
}

// SetIsHighlighted gets a reference to the given bool and assigns it to the IsHighlighted field.
func (o *ApiPluginListProvider) SetIsHighlighted(v bool) {
	o.IsHighlighted = &v
}

// GetHighlightedOrder returns the HighlightedOrder field value if set, zero value otherwise.
func (o *ApiPluginListProvider) GetHighlightedOrder() int32 {
	if o == nil || IsNil(o.HighlightedOrder) {
		var ret int32
		return ret
	}
	return *o.HighlightedOrder
}

// GetHighlightedOrderOk returns a tuple with the HighlightedOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPluginListProvider) GetHighlightedOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.HighlightedOrder) {
		return nil, false
	}
	return o.HighlightedOrder, true
}

// HasHighlightedOrder returns a boolean if a field has been set.
func (o *ApiPluginListProvider) HasHighlightedOrder() bool {
	if o != nil && !IsNil(o.HighlightedOrder) {
		return true
	}

	return false
}

// SetHighlightedOrder gets a reference to the given int32 and assigns it to the HighlightedOrder field.
func (o *ApiPluginListProvider) SetHighlightedOrder(v int32) {
	o.HighlightedOrder = &v
}

func (o ApiPluginListProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPluginListProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.ArtifactName) {
		toSerialize["artifactName"] = o.ArtifactName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Builtin) {
		toSerialize["builtin"] = o.Builtin
	}
	if !IsNil(o.PluginVersion) {
		toSerialize["pluginVersion"] = o.PluginVersion
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.IconUrl) {
		toSerialize["iconUrl"] = o.IconUrl
	}
	if !IsNil(o.ProviderMetadata) {
		toSerialize["providerMetadata"] = o.ProviderMetadata
	}
	if !IsNil(o.IsHighlighted) {
		toSerialize["isHighlighted"] = o.IsHighlighted
	}
	if !IsNil(o.HighlightedOrder) {
		toSerialize["highlightedOrder"] = o.HighlightedOrder
	}
	return toSerialize, nil
}

type NullableApiPluginListProvider struct {
	value *ApiPluginListProvider
	isSet bool
}

func (v NullableApiPluginListProvider) Get() *ApiPluginListProvider {
	return v.value
}

func (v *NullableApiPluginListProvider) Set(val *ApiPluginListProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPluginListProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPluginListProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPluginListProvider(val *ApiPluginListProvider) *NullableApiPluginListProvider {
	return &NullableApiPluginListProvider{value: val, isSet: true}
}

func (v NullableApiPluginListProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPluginListProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


