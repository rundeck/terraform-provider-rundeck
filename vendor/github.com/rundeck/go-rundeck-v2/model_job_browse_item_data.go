/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JobBrowseItemData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobBrowseItemData{}

// JobBrowseItemData struct for JobBrowseItemData
type JobBrowseItemData struct {
	Job *bool `json:"job,omitempty"`
	GroupPath *string `json:"groupPath,omitempty"`
	JobName *string `json:"jobName,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Meta []ItemMeta `json:"meta,omitempty"`
}

// NewJobBrowseItemData instantiates a new JobBrowseItemData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobBrowseItemData() *JobBrowseItemData {
	this := JobBrowseItemData{}
	return &this
}

// NewJobBrowseItemDataWithDefaults instantiates a new JobBrowseItemData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobBrowseItemDataWithDefaults() *JobBrowseItemData {
	this := JobBrowseItemData{}
	return &this
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *JobBrowseItemData) GetJob() bool {
	if o == nil || IsNil(o.Job) {
		var ret bool
		return ret
	}
	return *o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobBrowseItemData) GetJobOk() (*bool, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// HasJob returns a boolean if a field has been set.
func (o *JobBrowseItemData) HasJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given bool and assigns it to the Job field.
func (o *JobBrowseItemData) SetJob(v bool) {
	o.Job = &v
}

// GetGroupPath returns the GroupPath field value if set, zero value otherwise.
func (o *JobBrowseItemData) GetGroupPath() string {
	if o == nil || IsNil(o.GroupPath) {
		var ret string
		return ret
	}
	return *o.GroupPath
}

// GetGroupPathOk returns a tuple with the GroupPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobBrowseItemData) GetGroupPathOk() (*string, bool) {
	if o == nil || IsNil(o.GroupPath) {
		return nil, false
	}
	return o.GroupPath, true
}

// HasGroupPath returns a boolean if a field has been set.
func (o *JobBrowseItemData) HasGroupPath() bool {
	if o != nil && !IsNil(o.GroupPath) {
		return true
	}

	return false
}

// SetGroupPath gets a reference to the given string and assigns it to the GroupPath field.
func (o *JobBrowseItemData) SetGroupPath(v string) {
	o.GroupPath = &v
}

// GetJobName returns the JobName field value if set, zero value otherwise.
func (o *JobBrowseItemData) GetJobName() string {
	if o == nil || IsNil(o.JobName) {
		var ret string
		return ret
	}
	return *o.JobName
}

// GetJobNameOk returns a tuple with the JobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobBrowseItemData) GetJobNameOk() (*string, bool) {
	if o == nil || IsNil(o.JobName) {
		return nil, false
	}
	return o.JobName, true
}

// HasJobName returns a boolean if a field has been set.
func (o *JobBrowseItemData) HasJobName() bool {
	if o != nil && !IsNil(o.JobName) {
		return true
	}

	return false
}

// SetJobName gets a reference to the given string and assigns it to the JobName field.
func (o *JobBrowseItemData) SetJobName(v string) {
	o.JobName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *JobBrowseItemData) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobBrowseItemData) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *JobBrowseItemData) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *JobBrowseItemData) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobBrowseItemData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobBrowseItemData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobBrowseItemData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JobBrowseItemData) SetId(v string) {
	o.Id = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *JobBrowseItemData) GetMeta() []ItemMeta {
	if o == nil || IsNil(o.Meta) {
		var ret []ItemMeta
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobBrowseItemData) GetMetaOk() ([]ItemMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *JobBrowseItemData) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given []ItemMeta and assigns it to the Meta field.
func (o *JobBrowseItemData) SetMeta(v []ItemMeta) {
	o.Meta = v
}

func (o JobBrowseItemData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobBrowseItemData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	if !IsNil(o.GroupPath) {
		toSerialize["groupPath"] = o.GroupPath
	}
	if !IsNil(o.JobName) {
		toSerialize["jobName"] = o.JobName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableJobBrowseItemData struct {
	value *JobBrowseItemData
	isSet bool
}

func (v NullableJobBrowseItemData) Get() *JobBrowseItemData {
	return v.value
}

func (v *NullableJobBrowseItemData) Set(val *JobBrowseItemData) {
	v.value = val
	v.isSet = true
}

func (v NullableJobBrowseItemData) IsSet() bool {
	return v.isSet
}

func (v *NullableJobBrowseItemData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobBrowseItemData(val *JobBrowseItemData) *NullableJobBrowseItemData {
	return &NullableJobBrowseItemData{value: val, isSet: true}
}

func (v NullableJobBrowseItemData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobBrowseItemData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


