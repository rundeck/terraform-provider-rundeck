/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetricsQueryResponseDuration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsQueryResponseDuration{}

// MetricsQueryResponseDuration struct for MetricsQueryResponseDuration
type MetricsQueryResponseDuration struct {
	Average *string `json:"average,omitempty"`
	Max *string `json:"max,omitempty"`
	Min *string `json:"min,omitempty"`
}

// NewMetricsQueryResponseDuration instantiates a new MetricsQueryResponseDuration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsQueryResponseDuration() *MetricsQueryResponseDuration {
	this := MetricsQueryResponseDuration{}
	return &this
}

// NewMetricsQueryResponseDurationWithDefaults instantiates a new MetricsQueryResponseDuration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsQueryResponseDurationWithDefaults() *MetricsQueryResponseDuration {
	this := MetricsQueryResponseDuration{}
	return &this
}

// GetAverage returns the Average field value if set, zero value otherwise.
func (o *MetricsQueryResponseDuration) GetAverage() string {
	if o == nil || IsNil(o.Average) {
		var ret string
		return ret
	}
	return *o.Average
}

// GetAverageOk returns a tuple with the Average field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsQueryResponseDuration) GetAverageOk() (*string, bool) {
	if o == nil || IsNil(o.Average) {
		return nil, false
	}
	return o.Average, true
}

// HasAverage returns a boolean if a field has been set.
func (o *MetricsQueryResponseDuration) HasAverage() bool {
	if o != nil && !IsNil(o.Average) {
		return true
	}

	return false
}

// SetAverage gets a reference to the given string and assigns it to the Average field.
func (o *MetricsQueryResponseDuration) SetAverage(v string) {
	o.Average = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *MetricsQueryResponseDuration) GetMax() string {
	if o == nil || IsNil(o.Max) {
		var ret string
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsQueryResponseDuration) GetMaxOk() (*string, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *MetricsQueryResponseDuration) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given string and assigns it to the Max field.
func (o *MetricsQueryResponseDuration) SetMax(v string) {
	o.Max = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *MetricsQueryResponseDuration) GetMin() string {
	if o == nil || IsNil(o.Min) {
		var ret string
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsQueryResponseDuration) GetMinOk() (*string, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *MetricsQueryResponseDuration) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given string and assigns it to the Min field.
func (o *MetricsQueryResponseDuration) SetMin(v string) {
	o.Min = &v
}

func (o MetricsQueryResponseDuration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsQueryResponseDuration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Average) {
		toSerialize["average"] = o.Average
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	return toSerialize, nil
}

type NullableMetricsQueryResponseDuration struct {
	value *MetricsQueryResponseDuration
	isSet bool
}

func (v NullableMetricsQueryResponseDuration) Get() *MetricsQueryResponseDuration {
	return v.value
}

func (v *NullableMetricsQueryResponseDuration) Set(val *MetricsQueryResponseDuration) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsQueryResponseDuration) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsQueryResponseDuration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsQueryResponseDuration(val *MetricsQueryResponseDuration) *NullableMetricsQueryResponseDuration {
	return &NullableMetricsQueryResponseDuration{value: val, isSet: true}
}

func (v NullableMetricsQueryResponseDuration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsQueryResponseDuration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


