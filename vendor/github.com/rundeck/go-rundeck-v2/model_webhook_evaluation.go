/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the WebhookEvaluation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEvaluation{}

// WebhookEvaluation struct for WebhookEvaluation
type WebhookEvaluation struct {
	Id *string `json:"id,omitempty"`
	Time *time.Time `json:"time,omitempty"`
	Event map[string]interface{} `json:"event,omitempty"`
	BatchKey *string `json:"batchKey,omitempty"`
	Error *string `json:"error,omitempty"`
	RoutingResults []EventRoutingResult `json:"routingResults,omitempty"`
}

// NewWebhookEvaluation instantiates a new WebhookEvaluation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEvaluation() *WebhookEvaluation {
	this := WebhookEvaluation{}
	return &this
}

// NewWebhookEvaluationWithDefaults instantiates a new WebhookEvaluation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEvaluationWithDefaults() *WebhookEvaluation {
	this := WebhookEvaluation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookEvaluation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvaluation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookEvaluation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebhookEvaluation) SetId(v string) {
	o.Id = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *WebhookEvaluation) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvaluation) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *WebhookEvaluation) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *WebhookEvaluation) SetTime(v time.Time) {
	o.Time = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *WebhookEvaluation) GetEvent() map[string]interface{} {
	if o == nil || IsNil(o.Event) {
		var ret map[string]interface{}
		return ret
	}
	return o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvaluation) GetEventOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Event) {
		return map[string]interface{}{}, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *WebhookEvaluation) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given map[string]interface{} and assigns it to the Event field.
func (o *WebhookEvaluation) SetEvent(v map[string]interface{}) {
	o.Event = v
}

// GetBatchKey returns the BatchKey field value if set, zero value otherwise.
func (o *WebhookEvaluation) GetBatchKey() string {
	if o == nil || IsNil(o.BatchKey) {
		var ret string
		return ret
	}
	return *o.BatchKey
}

// GetBatchKeyOk returns a tuple with the BatchKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvaluation) GetBatchKeyOk() (*string, bool) {
	if o == nil || IsNil(o.BatchKey) {
		return nil, false
	}
	return o.BatchKey, true
}

// HasBatchKey returns a boolean if a field has been set.
func (o *WebhookEvaluation) HasBatchKey() bool {
	if o != nil && !IsNil(o.BatchKey) {
		return true
	}

	return false
}

// SetBatchKey gets a reference to the given string and assigns it to the BatchKey field.
func (o *WebhookEvaluation) SetBatchKey(v string) {
	o.BatchKey = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *WebhookEvaluation) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvaluation) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *WebhookEvaluation) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *WebhookEvaluation) SetError(v string) {
	o.Error = &v
}

// GetRoutingResults returns the RoutingResults field value if set, zero value otherwise.
func (o *WebhookEvaluation) GetRoutingResults() []EventRoutingResult {
	if o == nil || IsNil(o.RoutingResults) {
		var ret []EventRoutingResult
		return ret
	}
	return o.RoutingResults
}

// GetRoutingResultsOk returns a tuple with the RoutingResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvaluation) GetRoutingResultsOk() ([]EventRoutingResult, bool) {
	if o == nil || IsNil(o.RoutingResults) {
		return nil, false
	}
	return o.RoutingResults, true
}

// HasRoutingResults returns a boolean if a field has been set.
func (o *WebhookEvaluation) HasRoutingResults() bool {
	if o != nil && !IsNil(o.RoutingResults) {
		return true
	}

	return false
}

// SetRoutingResults gets a reference to the given []EventRoutingResult and assigns it to the RoutingResults field.
func (o *WebhookEvaluation) SetRoutingResults(v []EventRoutingResult) {
	o.RoutingResults = v
}

func (o WebhookEvaluation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEvaluation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	if !IsNil(o.BatchKey) {
		toSerialize["batchKey"] = o.BatchKey
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.RoutingResults) {
		toSerialize["routingResults"] = o.RoutingResults
	}
	return toSerialize, nil
}

type NullableWebhookEvaluation struct {
	value *WebhookEvaluation
	isSet bool
}

func (v NullableWebhookEvaluation) Get() *WebhookEvaluation {
	return v.value
}

func (v *NullableWebhookEvaluation) Set(val *WebhookEvaluation) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEvaluation) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEvaluation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEvaluation(val *WebhookEvaluation) *NullableWebhookEvaluation {
	return &NullableWebhookEvaluation{value: val, isSet: true}
}

func (v NullableWebhookEvaluation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEvaluation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


