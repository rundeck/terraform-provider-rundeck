/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PingTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PingTokenResponse{}

// PingTokenResponse struct for PingTokenResponse
type PingTokenResponse struct {
	PingToken *string `json:"pingToken,omitempty"`
}

// NewPingTokenResponse instantiates a new PingTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingTokenResponse() *PingTokenResponse {
	this := PingTokenResponse{}
	return &this
}

// NewPingTokenResponseWithDefaults instantiates a new PingTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingTokenResponseWithDefaults() *PingTokenResponse {
	this := PingTokenResponse{}
	return &this
}

// GetPingToken returns the PingToken field value if set, zero value otherwise.
func (o *PingTokenResponse) GetPingToken() string {
	if o == nil || IsNil(o.PingToken) {
		var ret string
		return ret
	}
	return *o.PingToken
}

// GetPingTokenOk returns a tuple with the PingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingTokenResponse) GetPingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PingToken) {
		return nil, false
	}
	return o.PingToken, true
}

// HasPingToken returns a boolean if a field has been set.
func (o *PingTokenResponse) HasPingToken() bool {
	if o != nil && !IsNil(o.PingToken) {
		return true
	}

	return false
}

// SetPingToken gets a reference to the given string and assigns it to the PingToken field.
func (o *PingTokenResponse) SetPingToken(v string) {
	o.PingToken = &v
}

func (o PingTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PingToken) {
		toSerialize["pingToken"] = o.PingToken
	}
	return toSerialize, nil
}

type NullablePingTokenResponse struct {
	value *PingTokenResponse
	isSet bool
}

func (v NullablePingTokenResponse) Get() *PingTokenResponse {
	return v.value
}

func (v *NullablePingTokenResponse) Set(val *PingTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePingTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePingTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingTokenResponse(val *PingTokenResponse) *NullablePingTokenResponse {
	return &NullablePingTokenResponse{value: val, isSet: true}
}

func (v NullablePingTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


