/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModeLaterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModeLaterRequest{}

// ModeLaterRequest Request to enable/disable the mode after a time delay.
type ModeLaterRequest struct {
	// Time duration expression.  A series of: an integer followed by a unit.  Units: * `s` - seconds (default) * `m` - minutes * `h` - hours * `d` - days * `w` - weeks * `y` - years.  Examples: `1d12h`, `3600` (defaults to seconds), `15m30s`. 
	Value *string `json:"value,omitempty" validate:"regexp=((\\\\d+)[smhdwy]?)+"`
}

// NewModeLaterRequest instantiates a new ModeLaterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModeLaterRequest() *ModeLaterRequest {
	this := ModeLaterRequest{}
	return &this
}

// NewModeLaterRequestWithDefaults instantiates a new ModeLaterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModeLaterRequestWithDefaults() *ModeLaterRequest {
	this := ModeLaterRequest{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModeLaterRequest) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModeLaterRequest) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModeLaterRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ModeLaterRequest) SetValue(v string) {
	o.Value = &v
}

func (o ModeLaterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModeLaterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableModeLaterRequest struct {
	value *ModeLaterRequest
	isSet bool
}

func (v NullableModeLaterRequest) Get() *ModeLaterRequest {
	return v.value
}

func (v *NullableModeLaterRequest) Set(val *ModeLaterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModeLaterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModeLaterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModeLaterRequest(val *ModeLaterRequest) *NullableModeLaterRequest {
	return &NullableModeLaterRequest{value: val, isSet: true}
}

func (v NullableModeLaterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModeLaterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


