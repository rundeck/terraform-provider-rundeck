/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RunnerReplicaList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunnerReplicaList{}

// RunnerReplicaList struct for RunnerReplicaList
type RunnerReplicaList struct {
	Replicas []RunnerReplicaSummary `json:"replicas,omitempty"`
}

// NewRunnerReplicaList instantiates a new RunnerReplicaList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunnerReplicaList() *RunnerReplicaList {
	this := RunnerReplicaList{}
	return &this
}

// NewRunnerReplicaListWithDefaults instantiates a new RunnerReplicaList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunnerReplicaListWithDefaults() *RunnerReplicaList {
	this := RunnerReplicaList{}
	return &this
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *RunnerReplicaList) GetReplicas() []RunnerReplicaSummary {
	if o == nil || IsNil(o.Replicas) {
		var ret []RunnerReplicaSummary
		return ret
	}
	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerReplicaList) GetReplicasOk() ([]RunnerReplicaSummary, bool) {
	if o == nil || IsNil(o.Replicas) {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *RunnerReplicaList) HasReplicas() bool {
	if o != nil && !IsNil(o.Replicas) {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given []RunnerReplicaSummary and assigns it to the Replicas field.
func (o *RunnerReplicaList) SetReplicas(v []RunnerReplicaSummary) {
	o.Replicas = v
}

func (o RunnerReplicaList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunnerReplicaList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Replicas) {
		toSerialize["replicas"] = o.Replicas
	}
	return toSerialize, nil
}

type NullableRunnerReplicaList struct {
	value *RunnerReplicaList
	isSet bool
}

func (v NullableRunnerReplicaList) Get() *RunnerReplicaList {
	return v.value
}

func (v *NullableRunnerReplicaList) Set(val *RunnerReplicaList) {
	v.value = val
	v.isSet = true
}

func (v NullableRunnerReplicaList) IsSet() bool {
	return v.isSet
}

func (v *NullableRunnerReplicaList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunnerReplicaList(val *RunnerReplicaList) *NullableRunnerReplicaList {
	return &NullableRunnerReplicaList{value: val, isSet: true}
}

func (v NullableRunnerReplicaList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunnerReplicaList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


