/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RuleRoutingResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleRoutingResult{}

// RuleRoutingResult struct for RuleRoutingResult
type RuleRoutingResult struct {
	RuleEvaluation *RuleEvaluation `json:"ruleEvaluation,omitempty"`
	JobRunStatus *JobRunStatus `json:"jobRunStatus,omitempty"`
	JobId *string `json:"jobId,omitempty"`
	ExecutionId *string `json:"executionId,omitempty"`
	ErrorMsg *string `json:"errorMsg,omitempty"`
	RenderedOptions *map[string]string `json:"renderedOptions,omitempty"`
}

// NewRuleRoutingResult instantiates a new RuleRoutingResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleRoutingResult() *RuleRoutingResult {
	this := RuleRoutingResult{}
	return &this
}

// NewRuleRoutingResultWithDefaults instantiates a new RuleRoutingResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleRoutingResultWithDefaults() *RuleRoutingResult {
	this := RuleRoutingResult{}
	return &this
}

// GetRuleEvaluation returns the RuleEvaluation field value if set, zero value otherwise.
func (o *RuleRoutingResult) GetRuleEvaluation() RuleEvaluation {
	if o == nil || IsNil(o.RuleEvaluation) {
		var ret RuleEvaluation
		return ret
	}
	return *o.RuleEvaluation
}

// GetRuleEvaluationOk returns a tuple with the RuleEvaluation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRoutingResult) GetRuleEvaluationOk() (*RuleEvaluation, bool) {
	if o == nil || IsNil(o.RuleEvaluation) {
		return nil, false
	}
	return o.RuleEvaluation, true
}

// HasRuleEvaluation returns a boolean if a field has been set.
func (o *RuleRoutingResult) HasRuleEvaluation() bool {
	if o != nil && !IsNil(o.RuleEvaluation) {
		return true
	}

	return false
}

// SetRuleEvaluation gets a reference to the given RuleEvaluation and assigns it to the RuleEvaluation field.
func (o *RuleRoutingResult) SetRuleEvaluation(v RuleEvaluation) {
	o.RuleEvaluation = &v
}

// GetJobRunStatus returns the JobRunStatus field value if set, zero value otherwise.
func (o *RuleRoutingResult) GetJobRunStatus() JobRunStatus {
	if o == nil || IsNil(o.JobRunStatus) {
		var ret JobRunStatus
		return ret
	}
	return *o.JobRunStatus
}

// GetJobRunStatusOk returns a tuple with the JobRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRoutingResult) GetJobRunStatusOk() (*JobRunStatus, bool) {
	if o == nil || IsNil(o.JobRunStatus) {
		return nil, false
	}
	return o.JobRunStatus, true
}

// HasJobRunStatus returns a boolean if a field has been set.
func (o *RuleRoutingResult) HasJobRunStatus() bool {
	if o != nil && !IsNil(o.JobRunStatus) {
		return true
	}

	return false
}

// SetJobRunStatus gets a reference to the given JobRunStatus and assigns it to the JobRunStatus field.
func (o *RuleRoutingResult) SetJobRunStatus(v JobRunStatus) {
	o.JobRunStatus = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *RuleRoutingResult) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRoutingResult) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *RuleRoutingResult) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *RuleRoutingResult) SetJobId(v string) {
	o.JobId = &v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *RuleRoutingResult) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRoutingResult) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *RuleRoutingResult) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *RuleRoutingResult) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetErrorMsg returns the ErrorMsg field value if set, zero value otherwise.
func (o *RuleRoutingResult) GetErrorMsg() string {
	if o == nil || IsNil(o.ErrorMsg) {
		var ret string
		return ret
	}
	return *o.ErrorMsg
}

// GetErrorMsgOk returns a tuple with the ErrorMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRoutingResult) GetErrorMsgOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMsg) {
		return nil, false
	}
	return o.ErrorMsg, true
}

// HasErrorMsg returns a boolean if a field has been set.
func (o *RuleRoutingResult) HasErrorMsg() bool {
	if o != nil && !IsNil(o.ErrorMsg) {
		return true
	}

	return false
}

// SetErrorMsg gets a reference to the given string and assigns it to the ErrorMsg field.
func (o *RuleRoutingResult) SetErrorMsg(v string) {
	o.ErrorMsg = &v
}

// GetRenderedOptions returns the RenderedOptions field value if set, zero value otherwise.
func (o *RuleRoutingResult) GetRenderedOptions() map[string]string {
	if o == nil || IsNil(o.RenderedOptions) {
		var ret map[string]string
		return ret
	}
	return *o.RenderedOptions
}

// GetRenderedOptionsOk returns a tuple with the RenderedOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRoutingResult) GetRenderedOptionsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.RenderedOptions) {
		return nil, false
	}
	return o.RenderedOptions, true
}

// HasRenderedOptions returns a boolean if a field has been set.
func (o *RuleRoutingResult) HasRenderedOptions() bool {
	if o != nil && !IsNil(o.RenderedOptions) {
		return true
	}

	return false
}

// SetRenderedOptions gets a reference to the given map[string]string and assigns it to the RenderedOptions field.
func (o *RuleRoutingResult) SetRenderedOptions(v map[string]string) {
	o.RenderedOptions = &v
}

func (o RuleRoutingResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleRoutingResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleEvaluation) {
		toSerialize["ruleEvaluation"] = o.RuleEvaluation
	}
	if !IsNil(o.JobRunStatus) {
		toSerialize["jobRunStatus"] = o.JobRunStatus
	}
	if !IsNil(o.JobId) {
		toSerialize["jobId"] = o.JobId
	}
	if !IsNil(o.ExecutionId) {
		toSerialize["executionId"] = o.ExecutionId
	}
	if !IsNil(o.ErrorMsg) {
		toSerialize["errorMsg"] = o.ErrorMsg
	}
	if !IsNil(o.RenderedOptions) {
		toSerialize["renderedOptions"] = o.RenderedOptions
	}
	return toSerialize, nil
}

type NullableRuleRoutingResult struct {
	value *RuleRoutingResult
	isSet bool
}

func (v NullableRuleRoutingResult) Get() *RuleRoutingResult {
	return v.value
}

func (v *NullableRuleRoutingResult) Set(val *RuleRoutingResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleRoutingResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleRoutingResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleRoutingResult(val *RuleRoutingResult) *NullableRuleRoutingResult {
	return &NullableRuleRoutingResult{value: val, isSet: true}
}

func (v NullableRuleRoutingResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleRoutingResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


