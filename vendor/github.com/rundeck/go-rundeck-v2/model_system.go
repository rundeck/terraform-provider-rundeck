/*
Rundeck

Rundeck provides a Web API for use with your applications.

API version: 53
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the System type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &System{}

// System System Information
type System struct {
	Timestamp *Timestamp `json:"timestamp,omitempty"`
	Rundeck *Rundeck `json:"rundeck,omitempty"`
	Executions *Executions `json:"executions,omitempty"`
	Os *Os `json:"os,omitempty"`
	Jvm *Jvm `json:"jvm,omitempty"`
	Stats *Stats `json:"stats,omitempty"`
	Metrics *Metrics `json:"metrics,omitempty"`
	ThreadDump *ThreadDump `json:"threadDump,omitempty"`
	Healthcheck *Healthcheck `json:"healthcheck,omitempty"`
	Ping *Ping `json:"ping,omitempty"`
	Extended map[string]interface{} `json:"extended,omitempty"`
}

// NewSystem instantiates a new System object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystem() *System {
	this := System{}
	return &this
}

// NewSystemWithDefaults instantiates a new System object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemWithDefaults() *System {
	this := System{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *System) GetTimestamp() Timestamp {
	if o == nil || IsNil(o.Timestamp) {
		var ret Timestamp
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetTimestampOk() (*Timestamp, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *System) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given Timestamp and assigns it to the Timestamp field.
func (o *System) SetTimestamp(v Timestamp) {
	o.Timestamp = &v
}

// GetRundeck returns the Rundeck field value if set, zero value otherwise.
func (o *System) GetRundeck() Rundeck {
	if o == nil || IsNil(o.Rundeck) {
		var ret Rundeck
		return ret
	}
	return *o.Rundeck
}

// GetRundeckOk returns a tuple with the Rundeck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetRundeckOk() (*Rundeck, bool) {
	if o == nil || IsNil(o.Rundeck) {
		return nil, false
	}
	return o.Rundeck, true
}

// HasRundeck returns a boolean if a field has been set.
func (o *System) HasRundeck() bool {
	if o != nil && !IsNil(o.Rundeck) {
		return true
	}

	return false
}

// SetRundeck gets a reference to the given Rundeck and assigns it to the Rundeck field.
func (o *System) SetRundeck(v Rundeck) {
	o.Rundeck = &v
}

// GetExecutions returns the Executions field value if set, zero value otherwise.
func (o *System) GetExecutions() Executions {
	if o == nil || IsNil(o.Executions) {
		var ret Executions
		return ret
	}
	return *o.Executions
}

// GetExecutionsOk returns a tuple with the Executions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExecutionsOk() (*Executions, bool) {
	if o == nil || IsNil(o.Executions) {
		return nil, false
	}
	return o.Executions, true
}

// HasExecutions returns a boolean if a field has been set.
func (o *System) HasExecutions() bool {
	if o != nil && !IsNil(o.Executions) {
		return true
	}

	return false
}

// SetExecutions gets a reference to the given Executions and assigns it to the Executions field.
func (o *System) SetExecutions(v Executions) {
	o.Executions = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *System) GetOs() Os {
	if o == nil || IsNil(o.Os) {
		var ret Os
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetOsOk() (*Os, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *System) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given Os and assigns it to the Os field.
func (o *System) SetOs(v Os) {
	o.Os = &v
}

// GetJvm returns the Jvm field value if set, zero value otherwise.
func (o *System) GetJvm() Jvm {
	if o == nil || IsNil(o.Jvm) {
		var ret Jvm
		return ret
	}
	return *o.Jvm
}

// GetJvmOk returns a tuple with the Jvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetJvmOk() (*Jvm, bool) {
	if o == nil || IsNil(o.Jvm) {
		return nil, false
	}
	return o.Jvm, true
}

// HasJvm returns a boolean if a field has been set.
func (o *System) HasJvm() bool {
	if o != nil && !IsNil(o.Jvm) {
		return true
	}

	return false
}

// SetJvm gets a reference to the given Jvm and assigns it to the Jvm field.
func (o *System) SetJvm(v Jvm) {
	o.Jvm = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *System) GetStats() Stats {
	if o == nil || IsNil(o.Stats) {
		var ret Stats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetStatsOk() (*Stats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *System) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given Stats and assigns it to the Stats field.
func (o *System) SetStats(v Stats) {
	o.Stats = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *System) GetMetrics() Metrics {
	if o == nil || IsNil(o.Metrics) {
		var ret Metrics
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetMetricsOk() (*Metrics, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *System) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given Metrics and assigns it to the Metrics field.
func (o *System) SetMetrics(v Metrics) {
	o.Metrics = &v
}

// GetThreadDump returns the ThreadDump field value if set, zero value otherwise.
func (o *System) GetThreadDump() ThreadDump {
	if o == nil || IsNil(o.ThreadDump) {
		var ret ThreadDump
		return ret
	}
	return *o.ThreadDump
}

// GetThreadDumpOk returns a tuple with the ThreadDump field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetThreadDumpOk() (*ThreadDump, bool) {
	if o == nil || IsNil(o.ThreadDump) {
		return nil, false
	}
	return o.ThreadDump, true
}

// HasThreadDump returns a boolean if a field has been set.
func (o *System) HasThreadDump() bool {
	if o != nil && !IsNil(o.ThreadDump) {
		return true
	}

	return false
}

// SetThreadDump gets a reference to the given ThreadDump and assigns it to the ThreadDump field.
func (o *System) SetThreadDump(v ThreadDump) {
	o.ThreadDump = &v
}

// GetHealthcheck returns the Healthcheck field value if set, zero value otherwise.
func (o *System) GetHealthcheck() Healthcheck {
	if o == nil || IsNil(o.Healthcheck) {
		var ret Healthcheck
		return ret
	}
	return *o.Healthcheck
}

// GetHealthcheckOk returns a tuple with the Healthcheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetHealthcheckOk() (*Healthcheck, bool) {
	if o == nil || IsNil(o.Healthcheck) {
		return nil, false
	}
	return o.Healthcheck, true
}

// HasHealthcheck returns a boolean if a field has been set.
func (o *System) HasHealthcheck() bool {
	if o != nil && !IsNil(o.Healthcheck) {
		return true
	}

	return false
}

// SetHealthcheck gets a reference to the given Healthcheck and assigns it to the Healthcheck field.
func (o *System) SetHealthcheck(v Healthcheck) {
	o.Healthcheck = &v
}

// GetPing returns the Ping field value if set, zero value otherwise.
func (o *System) GetPing() Ping {
	if o == nil || IsNil(o.Ping) {
		var ret Ping
		return ret
	}
	return *o.Ping
}

// GetPingOk returns a tuple with the Ping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPingOk() (*Ping, bool) {
	if o == nil || IsNil(o.Ping) {
		return nil, false
	}
	return o.Ping, true
}

// HasPing returns a boolean if a field has been set.
func (o *System) HasPing() bool {
	if o != nil && !IsNil(o.Ping) {
		return true
	}

	return false
}

// SetPing gets a reference to the given Ping and assigns it to the Ping field.
func (o *System) SetPing(v Ping) {
	o.Ping = &v
}

// GetExtended returns the Extended field value if set, zero value otherwise.
func (o *System) GetExtended() map[string]interface{} {
	if o == nil || IsNil(o.Extended) {
		var ret map[string]interface{}
		return ret
	}
	return o.Extended
}

// GetExtendedOk returns a tuple with the Extended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExtendedOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Extended) {
		return map[string]interface{}{}, false
	}
	return o.Extended, true
}

// HasExtended returns a boolean if a field has been set.
func (o *System) HasExtended() bool {
	if o != nil && !IsNil(o.Extended) {
		return true
	}

	return false
}

// SetExtended gets a reference to the given map[string]interface{} and assigns it to the Extended field.
func (o *System) SetExtended(v map[string]interface{}) {
	o.Extended = v
}

func (o System) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o System) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Rundeck) {
		toSerialize["rundeck"] = o.Rundeck
	}
	if !IsNil(o.Executions) {
		toSerialize["executions"] = o.Executions
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.Jvm) {
		toSerialize["jvm"] = o.Jvm
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.ThreadDump) {
		toSerialize["threadDump"] = o.ThreadDump
	}
	if !IsNil(o.Healthcheck) {
		toSerialize["healthcheck"] = o.Healthcheck
	}
	if !IsNil(o.Ping) {
		toSerialize["ping"] = o.Ping
	}
	if !IsNil(o.Extended) {
		toSerialize["extended"] = o.Extended
	}
	return toSerialize, nil
}

type NullableSystem struct {
	value *System
	isSet bool
}

func (v NullableSystem) Get() *System {
	return v.value
}

func (v *NullableSystem) Set(val *System) {
	v.value = val
	v.isSet = true
}

func (v NullableSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystem(val *System) *NullableSystem {
	return &NullableSystem{value: val, isSet: true}
}

func (v NullableSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


